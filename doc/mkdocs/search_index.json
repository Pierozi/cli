{
    "docs": [
        {
            "location": "/", 
            "text": "What is ContinuousPHP\n\n\nContinuousPHP is the first and only PHP-centric PaaS to build, package, test and deploy applications in the same workflow.\n\n\nThe ContinuousPHP CLI is command line interface for ContinuousPHP Platform.\n\n\nInstallation\n\n\nWe recommand to use the php installer script to install latest version\nof continuousphpcli PHAR.\n\n\n$ curl -LSs https://continuousphp.github.io/cli/phar-installer.php | php\n# Move the phar in your user bin directory\n$ mv continuousphpcli.phar /usr/local/bin/continuousphpcli\n\n\n\nThe command will check your PHP settings, warn you of any issues, and the download it to the current directory. \nFrom there, you may place it anywhere that will make it easier for you to access (such as \n/usr/local/bin\n) and chmod it to 755. \nYou can even rename it to just \ncontinuousphpcli\n to avoid having to type the .phar extension every time.\n\n\nConfiguration\n\n\nBy default, some of continuousphp api request do not require to be authenticate.\nBut you will certeinly need it for command that required permission, like start or stop build.\n\n\nThe cli implement a system of profile, to be able to use easily different continuousphp account.\n\n\neach profile must be configured with the continuousphp user token, you can find a personal token\n on your credentials page at https://app.continuousphp.com/credentials\n\n\nConfigure new profile in interactive mode with this command\n\n\n$ continuousphpcli configure\n \n Profile name [default]: myProfileName\n \n User Token: XXXXXXXXXX\n \n Profile myUserAccount saved in /home/user/.continuousphp/credentials\n\n\n\nIf you let profile name at \ndefault\n, the continuousphpcli will automatically use this credential.\nOtherwise, you must specify the option \n--profile myProfileName\n on each command.", 
            "title": "Home"
        }, 
        {
            "location": "/#what-is-continuousphp", 
            "text": "ContinuousPHP is the first and only PHP-centric PaaS to build, package, test and deploy applications in the same workflow.  The ContinuousPHP CLI is command line interface for ContinuousPHP Platform.", 
            "title": "What is ContinuousPHP"
        }, 
        {
            "location": "/#installation", 
            "text": "We recommand to use the php installer script to install latest version\nof continuousphpcli PHAR.  $ curl -LSs https://continuousphp.github.io/cli/phar-installer.php | php\n# Move the phar in your user bin directory\n$ mv continuousphpcli.phar /usr/local/bin/continuousphpcli  The command will check your PHP settings, warn you of any issues, and the download it to the current directory. \nFrom there, you may place it anywhere that will make it easier for you to access (such as  /usr/local/bin ) and chmod it to 755. \nYou can even rename it to just  continuousphpcli  to avoid having to type the .phar extension every time.", 
            "title": "Installation"
        }, 
        {
            "location": "/#configuration", 
            "text": "By default, some of continuousphp api request do not require to be authenticate.\nBut you will certeinly need it for command that required permission, like start or stop build.  The cli implement a system of profile, to be able to use easily different continuousphp account.  each profile must be configured with the continuousphp user token, you can find a personal token\n on your credentials page at https://app.continuousphp.com/credentials  Configure new profile in interactive mode with this command  $ continuousphpcli configure\n   Profile name [default]: myProfileName\n   User Token: XXXXXXXXXX\n   Profile myUserAccount saved in /home/user/.continuousphp/credentials  If you let profile name at  default , the continuousphpcli will automatically use this credential.\nOtherwise, you must specify the option  --profile myProfileName  on each command.", 
            "title": "Configuration"
        }
    ]
}